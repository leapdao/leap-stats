service:
  name: leap-stats
  app: leap-stats
  org: eswarasai

custom:
  dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
    packager: 'yarn'
    keepOutputDirectory: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-offline-scheduler

provider:
  name: aws
  runtime: nodejs10.x
  region: eu-west-1
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    STATS_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    PLASMA_PROVIDER: ${env:PLASMA_PROVIDER}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.STATS_TABLE}"

functions:
  get:
    handler: src/get.getStats
    events:
      - http:
          method: get
          path: stats/get
          cors: true

  update:
    handler: src/update.updateStats
    events:
      - schedule:
          rate: cron(0 0 * * ? *)
          enabled: true

resources:
  Resources:
    StatsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.STATS_TABLE}
